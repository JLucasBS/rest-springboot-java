{
  "openapi": "3.1.0",
  "info": {
    "title": "MÃ³dulo predefinido",
    "description": "REST API's for study",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "People"
    },
    {
      "name": "Books"
    }
  ],
  "paths": {
    "/api/v1/person/{id}": {
      "put": {
        "summary": "Update",
        "deprecated": false,
        "description": "Update a person",
        "operationId": "update",
        "tags": [
          "People"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": 0,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonDTO"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PersonDTO"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/PersonDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "No Content",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        },
        "security": []
      },
      "get": {
        "summary": "Find a Person",
        "deprecated": false,
        "description": "Find a specific person by ID",
        "operationId": "findByID_1",
        "tags": [
          "People"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": 0,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "No Content",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "Delete",
        "deprecated": false,
        "description": "Delete a person",
        "operationId": "delete_1",
        "tags": [
          "People"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": 0,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/api/v1/person": {
      "get": {
        "summary": "Find all people",
        "deprecated": false,
        "description": "Find all people",
        "operationId": "findAll",
        "tags": [
          "People"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonDTO"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "No Content",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "summary": "Create",
        "deprecated": false,
        "description": "Create a new person",
        "operationId": "create",
        "tags": [
          "People"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonDTO"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PersonDTO"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/PersonDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDTO"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "No Content",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/api/v1/books/{id}": {
      "get": {
        "summary": "Find a Book",
        "deprecated": false,
        "description": "Find a specific book by ID",
        "operationId": "findByID",
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": 0,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTO"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "No Content",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        },
        "security": []
      },
      "put": {
        "summary": "Update",
        "deprecated": false,
        "description": "Update a book",
        "operationId": "update_1",
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": 0,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookDTO"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BookDTO"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/BookDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTO"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "No Content",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "Delete",
        "deprecated": false,
        "description": "Delete a book",
        "operationId": "delete",
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": 0,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/api/v1/books": {
      "get": {
        "summary": "Find all books",
        "deprecated": false,
        "description": "Find all books",
        "operationId": "findAll_1",
        "tags": [
          "Books"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookDTO"
                  }
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "No Content",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "summary": "Create",
        "deprecated": false,
        "description": "Create a new book",
        "operationId": "create_1",
        "tags": [
          "Books"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookDTO"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BookDTO"
              }
            },
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/BookDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDTO"
                }
              }
            },
            "headers": {}
          },
          "204": {
            "description": "No Content",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {}
          }
        },
        "security": []
      }
    }
  },
  "webhooks": {},
  "components": {
    "schemas": {
      "PersonDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "BookDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "publication_date": {
            "type": "string",
            "format": "date"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "examples": [
              "2025-10-22 06:16:01"
            ]
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "hreflang": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "deprecation": {
            "type": "string"
          },
          "profile": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "templated": {
            "type": "boolean"
          }
        }
      },
      "Links": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/Link"
        },
        "properties": {}
      }
    },
    "securitySchemes": {}
  },
  "servers": [],
  "security": []
}